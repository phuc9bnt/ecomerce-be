// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.DBContext;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(UserDBContext))]
    partial class UserDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Persistence.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7890-abcd-123456789012"),
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("b2c3d4e5-f6a7-8901-bcde-234567890123"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("c3d4e5f6-a7b8-9012-cdef-345678901234"),
                            Name = "Moderator"
                        });
                });

            modelBuilder.Entity("Persistence.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4e5f6a7-b8c9-0123-def4-456789012345"),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "hashed_password_123",
                            UserName = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("e5f6a7b8-c9d0-1234-ef45-567890123456"),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "hashed_password_456",
                            UserName = "janesmith"
                        },
                        new
                        {
                            Id = new Guid("f6a7b8c9-d0e1-2345-f456-678901234567"),
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            Password = "hashed_password_789",
                            UserName = "bobjohnson"
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            RolesId = new Guid("a1b2c3d4-e5f6-7890-abcd-123456789012"),
                            UsersId = new Guid("d4e5f6a7-b8c9-0123-def4-456789012345")
                        },
                        new
                        {
                            RolesId = new Guid("b2c3d4e5-f6a7-8901-bcde-234567890123"),
                            UsersId = new Guid("d4e5f6a7-b8c9-0123-def4-456789012345")
                        },
                        new
                        {
                            RolesId = new Guid("b2c3d4e5-f6a7-8901-bcde-234567890123"),
                            UsersId = new Guid("e5f6a7b8-c9d0-1234-ef45-567890123456")
                        },
                        new
                        {
                            RolesId = new Guid("c3d4e5f6-a7b8-9012-cdef-345678901234"),
                            UsersId = new Guid("f6a7b8c9-d0e1-2345-f456-678901234567")
                        },
                        new
                        {
                            RolesId = new Guid("b2c3d4e5-f6a7-8901-bcde-234567890123"),
                            UsersId = new Guid("f6a7b8c9-d0e1-2345-f456-678901234567")
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("Persistence.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
